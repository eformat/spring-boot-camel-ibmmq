spring:
    application:
        name: helloservice
    # Enable auto-reload
    # https://github.com/fabric8io/spring-cloud-kubernetes#propertysource-reload
    # https://access.redhat.com/documentation/en-us/red_hat_jboss_fuse/6.3/html-single/fuse_integration_services_2.0_for_openshift
    cloud:
        kubernetes:
            reload:
                enabled: true
                strategy: RESTART_CONTEXT # this is needed for java implementation, spring refresh (default) works for spring xml

server:
    address: 0.0.0.0 # lets listen on all ports to ensure we can be invoked from the pod IP
    port: 8080

management:
    server:
        address: 0.0.0.0
        port: 8081 # lets use a different management port in case you need to listen to HTTP requests on 8080
    endpoints:
        web:
            base-path: / # default is /actuator/health

logging:
    config:
        classpath: logback.xml

camel:
    springboot:
        name: helloservice

# spring bean properties
helloservice:
    oneway: true
    message: hello ibmmq!
    time: 2000
    mqHosts: localhost #ibmmq-tomcat-ibm-mq
    mqPort: 1414
    mqQueueManager: QMGR1
    mqChannel: DEV.APP.SVRCONN
    mqUsername: app
    mqPassword: app
    mqQueueType: ibmMq:queue
    mqQueueNameIn: ibmMq:queue:DEV.QUEUE.1?concurrentConsumers=1
    mqQueueNameInOut: ibmMq:queue:DEV.QUEUE.1?useMessageIDAsCorrelationID=true&replyTo=DEV.QUEUE.2
    mqPoolMaxConnections: 2
